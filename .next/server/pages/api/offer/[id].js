"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/offer/[id]";
exports.ids = ["pages/api/offer/[id]"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "eth-sig-util":
/*!*******************************!*\
  !*** external "eth-sig-util" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("eth-sig-util");

/***/ }),

/***/ "(api)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prisma\": () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nlet prisma;\nif (false) {} else {\n    const g = global;\n    if (!g.prisma) g.prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n    prisma = g.prisma;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQUU5QyxJQUFJQztBQUVKLElBQUlDLEtBQXlCLEVBQWMsRUFFMUMsTUFBTTtJQUNMLE1BQU1DLElBQUlDO0lBQ1YsSUFBSSxDQUFDRCxFQUFFRixNQUFNLEVBQUVFLEVBQUVGLE1BQU0sR0FBRyxJQUFJRCx3REFBWUE7SUFDMUNDLFNBQVNFLEVBQUVGLE1BQU07QUFDbkIsQ0FBQztBQUVpQiIsInNvdXJjZXMiOlsid2VicGFjazovL29zaWduLnNoLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcblxubGV0IHByaXNtYTogUHJpc21hQ2xpZW50O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBwcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KCk7XG59IGVsc2Uge1xuICBjb25zdCBnID0gZ2xvYmFsIGFzIGFueTtcbiAgaWYgKCFnLnByaXNtYSkgZy5wcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KCk7XG4gIHByaXNtYSA9IGcucHJpc21hO1xufVxuXG5leHBvcnQgeyBwcmlzbWEgfTtcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWEiLCJwcm9jZXNzIiwiZyIsImdsb2JhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./pages/api/offer/[id].ts":
/*!*********************************!*\
  !*** ./pages/api/offer/[id].ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/prisma */ \"(api)/./lib/prisma.ts\");\n/* harmony import */ var eth_sig_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eth-sig-util */ \"eth-sig-util\");\n/* harmony import */ var eth_sig_util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(eth_sig_util__WEBPACK_IMPORTED_MODULE_1__);\n// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\n\n\nasync function handler(req, res) {\n    if (req.method == \"GET\") {\n        const offer = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.offers.findMany({\n            where: {\n                id: req.query.id\n            }\n        });\n        if (offer) {\n            res.status(200).json({\n                data: offer\n            });\n        } else {\n            res.status(404).json({\n                message: \"offer not found\"\n            });\n        }\n    } else if (req.method == \"PUT\") {\n        // 更新签名\n        const signer = req.body.signer;\n        const signature = req.body.signature;\n        const id = req.query.id;\n        const data = req.body.data;\n        if (!signer) {\n            return res.status(400).json({\n                message: \"Missing signer\"\n            });\n        }\n        if (!signature) {\n            return res.status(400).json({\n                message: \"Missing signature\"\n            });\n        }\n        const offer1 = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.offers.findFirst({\n            where: {\n                id: id\n            }\n        });\n        console.log(offer1);\n        if (!offer1) {\n            return res.status(404).json({\n                message: \"offer not found\"\n            });\n        }\n        if (!offer1.signers.includes(signer)) {\n            return res.status(400).json({\n                message: \"not valid signer\"\n            });\n        }\n        if (offer1.expiresAt < new Date()) {\n            return res.status(400).json({\n                message: \"offer expired\"\n            });\n        }\n        //@ts-ignore\n        if (offer1.signdata && offer1.signdata[signer]) {\n            return res.status(400).json({\n                message: \"already signed\"\n            });\n        }\n        try {\n            const recoveredAddr = (0,eth_sig_util__WEBPACK_IMPORTED_MODULE_1__.recoverPersonalSignature)({\n                data: `I am sign for the offer: ${id} \\nOffer detail: ${JSON.stringify(offer1.staticData, null, 2)} \\nWallet address:${signer}.`,\n                sig: signature\n            });\n            console.log(`I am sign for the offer: ${id} \\nOffer detail: ${JSON.stringify(offer1.staticData, null, 2)} \\nWallet address:${signer}.`);\n            console.log(recoveredAddr, signer, signature);\n            if (!recoveredAddr || recoveredAddr.toLowerCase() != signer.toLowerCase()) {\n                return res.status(400).json({\n                    message: \"invalid signature\"\n                });\n            }\n            let signdata = offer1.signdata;\n            if (!signdata) {\n                signdata = {};\n            }\n            signdata = {\n                ...signdata,\n                [signer]: signature\n            };\n            // 写入扩展数据\n            let extData = offer1.extData;\n            if (!extData) {\n                extData = {};\n            } else {\n                for(let key in data){\n                    // 不能覆盖已有字段，只能增量写入新的字段\n                    if (extData[key] == undefined) {\n                        extData[key] = data[key];\n                    }\n                }\n            }\n            // 检查是否签名完毕\n            let allSigned = false;\n            if (offer1.signers.length == Object.keys(signdata).length) {\n                allSigned = true;\n            }\n            const offers = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.offers.update({\n                where: {\n                    id: id\n                },\n                data: {\n                    extData: extData,\n                    signdata,\n                    ...allSigned ? {\n                        status: 2\n                    } : {}\n                }\n            });\n            res.status(200).json({\n                data: offers\n            });\n        } catch (e) {\n            console.log(e);\n            res.status(400).json({\n                message: \"update offer error: \" + e.message\n            });\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/offer/[id].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/offer/[id].ts"));
module.exports = __webpack_exports__;

})();